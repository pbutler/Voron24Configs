############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> ERCF MCUs are called "ercf" 

# ------------------------------------------------------------------------------------------
[pause_resume]
recover_velocity: 300.0

[probe]
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3


[servo probeservo]
pin: mcu:PROBE_SERVO
maximum_servo_angle: 90
minimum_pulse_width: 0.001
maximum_pulse_width: 0.002

#[servo blobifier]
#pin: BLOBIFIER_SERVO
#maximum_servo_angle: 90
#minimum_pulse_width: 0.0005
#maximum_pulse_width: 0.0024

#[gcode_button bucket]
#pin: ^!BLOBIFIER_SW
#press_gcode:
#  M117 Hi
#  SET_LED  LED=status_leds RED=1 GREEN=0 BLUE=0
#release_gcode:
#  M117 Bye
#  SET_LED  LED=status_leds RED=0 GREEN=1 BLUE=0
#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[heater_bed]
control = pid
pid_kp = 41.855
pid_ki = 1.569
pid_kd = 279.584

[extruder]
control = pid
pid_kp = 24.201
pid_ki = 2.645
pid_kd = 55.361
max_temp: 305
microsteps: 16
rotation_distance: 4.6421007 #4.637
#rotation_distance: 42.756053 #22.62225
#rotation_distance: 22.62225
#dir_pin: !toolhead:E_DIR

[stepper_z]
position_endstop = 1.989
## 1.100

#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.
[stepper_z1]
dir_pin: !Z1_DIR

[stepper_z3]
dir_pin: !Z3_DIR

[z_calibration]
nozzle_xy_position: 233.5,343 #232,345
#   A X, Y coordinate (e.g. 100,100) of the nozzle, clicking on the Z endstop.
switch_xy_position: 229.5, 320 #228,322
#   A X, Y coordinate (e.g. 100,100) of the probe's switch body, clicking on
#   the Z endstop.
bed_xy_position: 175, 175
#   a X, Y coordinate (e.g. 100,100) where the print surface (e.g. the center
#   point) is probed. These coordinates will be adapted by the
#   probe's X and Y offsets. The default is the relative_reference_index
#   of the configured bed_mesh, if configured. It's possible to change the relative
#   reference index at runtime or use the GCode argument BED_POSITION of CALIBRATE_Z.
switch_offset: 0.635 #0.625
#   The trigger point offset of the used mag-probe switch.
#   Larger values will position the nozzle closer to the bed.
#   This needs to be find out manually. More on this later
#   in this section..
samples: 3
#samples_tolerance: 0.01
#clearance: 10
safe_z_height: 20
offset_margins: -1.0,1.0
probing_first_fast: true

[controller_fan controller_fan]
 ##  Controller fan - FAN3
pin: CONTROLLER_FAN
max_power: 0.5
kick_start_time: 0.5
heater: heater_bed

[controller_fan controllerb_fan]
##  Controller fan - FAN4
pin: CONTROLLERB_FAN
max_power: 0.5
kick_start_time: 0.5
heater: heater_bed


[fan_generic BedFans]
pin: BED_FAN # Change me
#cycle_time: 0.05
kick_start_time: 0.5

#[controller_fan sb2040-fan]
##  SB2040 5V fan
#pin: toolhead:MCU_FAN2
#kick_start_time: 0.5  # full speed to spinn of fan
#fan_speed: 0.9 #reduce speed to 90%
#heater: extruder  # enabled when heater bed heating

[stepper_y]
position_min: 0
position_max: 345
position_endstop: 345

[gcode_macro PARK_FRONT]
description: Park toolhead in front of machine
gcode:
    {% set Z_HOP = params.Z_HOP|default(5)|float %}
    {% set x_park = 175.0 %}
    {% set y_park = 0.0 %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}

    {% if act_z < (max_z - Z_HOP) %}
        {% set z_safe = Z_HOP %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}

    G91
    G1 Z{z_safe} F900
    G90
    G0 X{x_park} Y{y_park} F6000


