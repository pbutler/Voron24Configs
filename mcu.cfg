######################################################### \
#### User MCU and TMCs wiring definition file ###########  + --> Everything MCU related :)
######################################################### /

# This file is yours: keep in mind that it will not be erased when updating
# the config using moonraker and it will be kept as you've set it.

# Put here all your wiring definitions, your MCU serial port, CANbus UUID, etc...
# It should be populated automatically with some default wiring templates during
# the first time install of the config if you choose to do so when asked by the
# script. If it's not the case, you will need to manually define all your
# [board_pins] section. You can use the pinout documentation here: ./docs/pinout.md

# ------------------------------------------------------------------------------------------


#-------------------------#
#   TMCs DRIVERS          #
#-------------------------#

# ---------------------------------------------------------------------- AXIS DRIVERS ----> optional, but only one line per axis need to be selected
### 1. X Drivers -------------------------------------------------------------------------
[include config/hardware/axis/X/TMC/TMC2209.cfg]
# [include config/hardware/axis/X/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
### 2. Y Drivers -------------------------------------------------------------------------
[include config/hardware/axis/Y/TMC/TMC2209.cfg]
# [include config/hardware/axis/Y/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
### 3. Z Drivers -------------------------------------------------------------------------
# [include config/hardware/axis/Z/TMC/TMC2209_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2209_3-Motors.cfg]
[include config/hardware/axis/Z/TMC/TMC2209_4-Motors.cfg]
# ----------------------------------------------------------------------------------------


# ------------------------------------------------------------------- EXTRUDER DRIVER ----> optional, but only one line need to be selected
### --------------------------------------------------------------------------------------
[include config/hardware/extruder/TMC/TMC2209.cfg]
#[include config/hardware/extruder/TMC/TMC2240.cfg]
# ----------------------------------------------------------------------------------------


#--------------------------------------#
#### BTT Octopus MCU definition ########
#--------------------------------------#

[mcu]
##--------------------------------------------------------------------
# This board work by using a serial connection by default. If you
# want to use CAN, invert the commented lines and use canbus_uuid.

serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_210039001450304738313820-if00
# canbus_uuid: change-me-to-the-correct-canbus-id
##--------------------------------------------------------------------
#X_STOP=MCU_STOP0 
#E_STEP=MCU_MOTOR6_STEP   , E_DIR=MCU_MOTOR6_DIR   , E_ENABLE=MCU_MOTOR6_ENABLE   , E_TMCUART=MCU_MOTOR6_UART   ,

[include config/mcu_definitions/main/BTT_Octopus.cfg] # Do not remove this line
[board_pins octopus_mcu]
mcu: mcu
aliases:
    X_STEP=MCU_MOTOR0_STEP   , X_DIR=MCU_MOTOR0_DIR   , X_ENABLE=MCU_MOTOR0_ENABLE   , X_TMCUART=MCU_MOTOR0_UART   ,
    Y_STEP=MCU_MOTOR1_STEP   , Y_DIR=MCU_MOTOR1_DIR   , Y_ENABLE=MCU_MOTOR1_ENABLE   , Y_TMCUART=MCU_MOTOR1_UART   ,

    Z_STEP=MCU_MOTOR2_1_STEP , Z_DIR=MCU_MOTOR2_1_DIR , Z_ENABLE=MCU_MOTOR2_1_ENABLE , Z_TMCUART=MCU_MOTOR2_1_UART ,
    Z1_STEP=MCU_MOTOR3_STEP  , Z1_DIR=MCU_MOTOR3_DIR  , Z1_ENABLE=MCU_MOTOR3_ENABLE  , Z1_TMCUART=MCU_MOTOR3_UART  ,
    Z2_STEP=MCU_MOTOR4_STEP  , Z2_DIR=MCU_MOTOR4_DIR  , Z2_ENABLE=MCU_MOTOR4_ENABLE  , Z2_TMCUART=MCU_MOTOR4_UART  ,
    Z3_STEP=MCU_MOTOR5_STEP  , Z3_DIR=MCU_MOTOR5_DIR  , Z3_ENABLE=MCU_MOTOR5_ENABLE  , Z3_TMCUART=MCU_MOTOR5_UART  ,

    
    Y_STOP=MCU_STOP0 , Z_STOP=MCU_STOP2 ,
    #PROBE_INPUT=MCU_STOP7  ,
    RUNOUT_SENSOR=MCU_STOP3 ,

    E_HEATER=MCU_HE0   , E_TEMPERATURE=MCU_T1   ,
    BED_HEATER=MCU_HE1 , BED_TEMPERATURE=MCU_TB ,

    BED_FAN=MCU_FAN0 ,
    CONTROLLER_FAN=MCU_FAN3        ,
    FILTER_FAN=MCU_FAN2            ,
    CONTROLLERB_FAN=MCU_FAN4   ,


    CHAMBER_TEMPERATURE=MCU_T0 , ELECTRICAL_CABINET_TEMPERATURE=MCU_T2 ,

    #LIGHT_OUTPUT=MCU_HE2         ,
    #LIGHT_NEOPIXEL=MCU_STOP5     ,
    #STATUS_NEOPIXEL=MCU_NEOPIXEL ,
    PROBE_SERVO=MCU_PROBE,  #STOP6, #EOPIXEL,
    BLOBIFIER_SERVO=MCU_SERVOS ,
    BLOBIFIER_SW=MCU_STOP7 ,

#EXHAUST_FAN=MCU_FAN5           ,
#-------------------------------------------#
#### Mellow SB2040 v1 MCU definition ########
#-------------------------------------------#

[mcu toolhead]
##--------------------------------------------------------------------
canbus_uuid: b9409b3280c7
##--------------------------------------------------------------------

# If you want to override the wiring of the Mellow SB2040, keep in mind that this
# board is defined using the "toolhead" name. So you should use "pin: toolhead:PIN_NAME"
# in your own overrides.cfg files.

[include config/mcu_definitions/toolhead/BTT_EBB36-42_v1.2.cfg] # Do not remove this line

[board_pins ebb36_mcu]
mcu: toolhead
aliases:
    E_STEP=MCU_TMCDRIVER_STEP , E_DIR=MCU_TMCDRIVER_DIR , E_ENABLE=MCU_TMCDRIVER_ENABLE ,  E_TMCUART=MCU_TMCDRIVER_UART,

    PROBE_INPUT=MCU_ENDSTOP1,
    TOOLHEAD_SENSOR=MCU_ENDSTOP3,
    X_STOP=MCU_ENDSTOP2,
    EXTRUDER_SENSOR=MCU_PROBE,

    E_HEATER=MCU_HOTEND0,
    PART_FAN=MCU_FAN2, E_FAN=MCU_FAN1,

    STATUS_NEOPIXEL=MCU_RGB,
    MAX_CS=MCU_SPI1_CS,
    ADXL_CS=PB12 , ADXL_SCLK=PB10 , ADXL_MISO=PB2 , ADXL_MOSI=PB11 ,
    #DRIVER_SPI_SCK=MCU_ADXL_SCK, DRIVER_SPI_MOSI=MCU_ADXL_MOSI, DRIVER_SPI_MISO=MCU_ADXL_MISO


#----------------------------------------#
#     Mellow SB2040 v1 pins remapping    #
#----------------------------------------#

# These pins overrides are automatically added when you select a CANbus
# toolhead MCU during the installation process. They should provide a
# good base to work with. Feel free to adapt to your board if needed!



[extruder]
step_pin: toolhead:E_STEP
dir_pin: toolhead:E_DIR
enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE
sensor_type: MAX31865
sensor_pin: toolhead: MAX_CS
spi_bus: spi1
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2


[probe]
pin: ^toolhead:PROBE_INPUT

[fan]
pin: toolhead:PART_FAN

[heater_fan hotend_fan]
pin: toolhead:E_FAN

## Uncomment the following line if not using sensorless homing
## and having the X endstop plugged to the toolhead MCU
[stepper_x]
endstop_pin: ^toolhead:X_STOP

[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL

[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART


## #--------------------------------------------------#
## #### Tircown ERCF easybrd MCU definition ###########
## #--------------------------------------------------#
## 
## [mcu mmu]
## ##--------------------------------------------------------------------
## serial: /dev/serial/by-id/usb-Klipper_samd21g18a_DBBDCC323359535120202036231107FF-if00
## ##--------------------------------------------------------------------
## 
## # If you want to override the wiring of the ERCF easy brd, keep in mind that this
## # board is defined using the "ercf" name. So you should use "pin: ercf:PIN_NAME"
## # in your own overrides.cfg files.
## 
## [include config/mcu_definitions/mmu/Tircown_ERCF_easy_brd.cfg] # Do not remove this line
## [board_pins mcu_mmu]
## mcu: mmu
## aliases:
##     GEAR_STEP=MCU_GEAR_STEP         , GEAR_DIR=MCU_GEAR_DIR         , GEAR_ENABLE=MCU_GEAR_ENABLE         , GEAR_TMCUART=MCU_TMCUART     ,
##     SELECTOR_STEP=MCU_SELECTOR_STEP , SELECTOR_DIR=MCU_SELECTOR_DIR , SELECTOR_ENABLE=MCU_SELECTOR_ENABLE , SELECTOR_TMCUART=MCU_TMCUART ,
##     SELECTOR_DIAG=MCU_SELECTOR_DIAG ,
## 
##     GEAR_STOP=MCU_GEAR_STOP , SELECTOR_STOP=MCU_SELECTOR_STOP ,
## 
##     MMU_SERVO=MCU_SERVO ,
## 
##     MMU_ENCODER=MCU_ENCODER ,
## 
## 
